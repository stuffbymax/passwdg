#!/bin/bash

# Function to generate a random password
generate_password() {
  local length=$1
  local charset='A-Za-z0-9!@#$%^&*()_+[]{}|;:,.<>?'
  # Generate the password
  local password=$(cat /dev/urandom | tr -dc "$charset" | head -c "$length")
  echo "$password"
}

# Default password length
DEFAULT_LENGTH=12

# Read the desired password length from the user, or use the default length
read -p "Enter the desired password length (default is $DEFAULT_LENGTH): " length
length=${length:-$DEFAULT_LENGTH}

# Generate the password
password=$(generate_password $length)

# Read the directory path where the password should be saved
read -p "Enter the directory path to save the password: " dir_path

# Ensure the directory exists
if [ ! -d "$dir_path" ]; then
  echo "Directory does not exist. Creating directory..."
  mkdir -p "$dir_path"
fi

# Read the file name where the password should be saved
read -p "Enter the file name to save the password: " file_name

# Save the password to the specified file in the specified directory
echo "$password" > "$dir_path/$file_name"

# Confirm the password has been saved
echo "Password saved to $dir_path/$file_name"
